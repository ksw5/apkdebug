package com.good.gd.ndkproxy.items;

import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import com.good.gd.notifications.items.PlatformNotification;

/* loaded from: classes.dex */
public class MalwareAppsNotification extends PlatformNotification {
    private Action actionType;
    private String appPackage;

    /* loaded from: classes.dex */
    public enum Action {
        ACTION_OPEN_APP,
        ACTION_OPEN_PACKAGE_MANAGER,
        ACTION_OPEN_MALWARE_APP_SETTINGS;

        public static Action getActionOrDefault(int i) {
            if (i >= 0 && i < values().length) {
                return values()[i];
            }
            return ACTION_OPEN_APP;
        }
    }

    public MalwareAppsNotification(int i, String str, String str2, String str3, Action action) {
        this(i, str, str2, str3, action, "");
    }

    private static native String getAppPackageName(String str);

    private static native int getCoreActionType(String str);

    @Override // com.good.gd.notifications.items.PlatformNotification, com.good.gd.notifications.items.BBDNotificationBase
    public Intent getMainAction() {
        int ordinal = this.actionType.ordinal();
        if (ordinal != 0) {
            if (ordinal == 1) {
                return getSettingsIntent();
            }
            if (ordinal != 2) {
                return null;
            }
            String str = this.appPackage;
            if (str.isEmpty()) {
                return getSettingsIntent();
            }
            Intent intent = new Intent();
            intent.setAction("android.settings.APPLICATION_DETAILS_SETTINGS");
            intent.setData(Uri.fromParts("package", str, null));
            return intent;
        }
        return super.getMainAction();
    }

    protected Intent getSettingsIntent() {
        Intent intent = new Intent();
        intent.setAction("android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS");
        return intent;
    }

    @Override // com.good.gd.notifications.items.PlatformNotification, com.good.gd.notifications.items.BBDNotificationBase
    public boolean update(Context context, NotificationManager notificationManager) {
        this.actionType = Action.getActionOrDefault(getCoreActionType(getCoreId()));
        this.appPackage = getAppPackageName(getCoreId());
        return super.update(context, notificationManager);
    }

    public MalwareAppsNotification(int i, String str, String str2, String str3, Action action, String str4) {
        super(i, str, str2, str3);
        this.actionType = action;
        this.appPackage = str4;
    }
}
