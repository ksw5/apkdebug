package com.good.gd.security.malware;

/* loaded from: classes.dex */
public class RuleCheckResults {
    int mA;
    int mB;
    int mC;
    int mD;
    long mNonce;
    String mResult = "";
    RULE_TYPE mRuleType;

    /* loaded from: classes.dex */
    public enum RESULT_TYPE {
        FAILURE,
        SUCCESS_SKIP,
        FAILURE_SKIP,
        SUCCESS
    }

    /* loaded from: classes.dex */
    public enum RULE_TYPE {
        MALWARE,
        PLATFORM_INTEGRITY,
        SYSTEM_PROPERTIES,
        FILESTAT_CHECKS
    }

    public RuleCheckResults(RULE_TYPE rule_type, int i, int i2, int i3, int i4, long j) {
        this.mRuleType = rule_type;
        this.mA = i;
        this.mB = i2;
        this.mC = i3;
        this.mD = i4;
        this.mNonce = j;
    }

    public String getResult() {
        return this.mResult;
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Removed duplicated region for block: B:31:0x0086  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct code enable 'Show inconsistent code' option in preferences
    */
    public String getResult(RESULT_TYPE r5) {
        /*
            r4 = this;
            int r5 = r5.ordinal()
            switch(r5) {
                case 0: goto L66;
                case 1: goto L48;
                case 2: goto L2a;
                case 3: goto L9;
                default: goto L7;
            }
        L7:
            goto L86
        L9:
            com.good.gd.security.malware.RuleCheckResults$RULE_TYPE r5 = r4.mRuleType
            int r5 = r5.ordinal()
            switch(r5) {
                case 0: goto L25;
                case 1: goto L20;
                case 2: goto L1a;
                case 3: goto L14;
                default: goto L12;
            }
        L12:
            goto L86
        L14:
            long r0 = r4.mNonce
            int r5 = r4.mD
            goto L83
        L1a:
            long r0 = r4.mNonce
            int r5 = r4.mC
            goto L83
        L20:
            long r0 = r4.mNonce
            int r5 = r4.mA
            goto L83
        L25:
            long r0 = r4.mNonce
            int r5 = r4.mB
            goto L83
        L2a:
            com.good.gd.security.malware.RuleCheckResults$RULE_TYPE r5 = r4.mRuleType
            int r5 = r5.ordinal()
            switch(r5) {
                case 0: goto L43;
                case 1: goto L3e;
                case 2: goto L39;
                case 3: goto L34;
                default: goto L33;
            }
        L33:
            goto L86
        L34:
            long r0 = r4.mNonce
            int r5 = r4.mC
            goto L83
        L39:
            long r0 = r4.mNonce
            int r5 = r4.mB
            goto L83
        L3e:
            long r0 = r4.mNonce
            int r5 = r4.mD
            goto L83
        L43:
            long r0 = r4.mNonce
            int r5 = r4.mC
            goto L83
        L48:
            com.good.gd.security.malware.RuleCheckResults$RULE_TYPE r5 = r4.mRuleType
            int r5 = r5.ordinal()
            switch(r5) {
                case 0: goto L61;
                case 1: goto L5c;
                case 2: goto L57;
                case 3: goto L52;
                default: goto L51;
            }
        L51:
            goto L86
        L52:
            long r0 = r4.mNonce
            int r5 = r4.mC
            goto L83
        L57:
            long r0 = r4.mNonce
            int r5 = r4.mD
            goto L83
        L5c:
            long r0 = r4.mNonce
            int r5 = r4.mB
            goto L83
        L61:
            long r0 = r4.mNonce
            int r5 = r4.mA
            goto L83
        L66:
            com.good.gd.security.malware.RuleCheckResults$RULE_TYPE r5 = r4.mRuleType
            int r5 = r5.ordinal()
            switch(r5) {
                case 0: goto L7f;
                case 1: goto L7a;
                case 2: goto L75;
                case 3: goto L70;
                default: goto L6f;
            }
        L6f:
            goto L86
        L70:
            long r0 = r4.mNonce
            int r5 = r4.mB
            goto L83
        L75:
            long r0 = r4.mNonce
            int r5 = r4.mA
            goto L83
        L7a:
            long r0 = r4.mNonce
            int r5 = r4.mC
            goto L83
        L7f:
            long r0 = r4.mNonce
            int r5 = r4.mD
        L83:
            long r2 = (long) r5
            long r0 = r0 - r2
            goto L88
        L86:
            r0 = 0
        L88:
            java.lang.String r5 = java.lang.Long.toString(r0)
            r4.mResult = r5
            return r5
        */
        throw new UnsupportedOperationException("Method not decompiled: com.good.gd.security.malware.RuleCheckResults.getResult(com.good.gd.security.malware.RuleCheckResults$RESULT_TYPE):java.lang.String");
    }
}
